<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenTelemetry.Exporter.Console</name>
    </assembly>
    <members>
        <member name="P:OpenTelemetry.Exporter.ConsoleExporterOptions.Targets">
            <summary>
            Gets or sets the output targets for the console exporter.
            </summary>
        </member>
        <member name="F:OpenTelemetry.Exporter.ConsoleExporterOutputTargets.Console">
            <summary>
            Output to the Console (stdout).
            </summary>
        </member>
        <member name="F:OpenTelemetry.Exporter.ConsoleExporterOutputTargets.Debug">
            <summary>
            Output to the Debug trace.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Trace.ConsoleExporterHelperExtensions.AddConsoleExporter(OpenTelemetry.Trace.TracerProviderBuilder)">
            <summary>
            Adds Console exporter to the TracerProvider.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Trace.TracerProviderBuilder"/> builder to use.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Trace.ConsoleExporterHelperExtensions.AddConsoleExporter(OpenTelemetry.Trace.TracerProviderBuilder,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds Console exporter to the TracerProvider.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Trace.TracerProviderBuilder"/> builder to use.</param>
            <param name="configure">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Trace.ConsoleExporterHelperExtensions.AddConsoleExporter(OpenTelemetry.Trace.TracerProviderBuilder,System.String,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds Console exporter to the TracerProvider.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Trace.TracerProviderBuilder"/> builder to use.</param>
            <param name="name">Name which is used when retrieving options.</param>
            <param name="configure">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="T:OpenTelemetry.Trace.SpanAttributeConstants">
            <summary>
            Defines well-known span attribute keys.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.OpenTelemetryLoggerOptions)">
            <summary>
            Adds Console exporter with OpenTelemetryLoggerOptions.
            </summary>
            <param name="loggerOptions"><see cref="T:OpenTelemetry.Logs.OpenTelemetryLoggerOptions"/> options to use.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Logs.OpenTelemetryLoggerOptions"/> to chain the calls.</returns>
            todo: [Obsolete("Call LoggerProviderBuilder.AddConsoleExporter instead this method will be removed in a future version.")]
        </member>
        <member name="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.OpenTelemetryLoggerOptions,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds Console exporter with OpenTelemetryLoggerOptions.
            </summary>
            <param name="loggerOptions"><see cref="T:OpenTelemetry.Logs.OpenTelemetryLoggerOptions"/> options to use.</param>
            <param name="configure">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Logs.OpenTelemetryLoggerOptions"/> to chain the calls.</returns>
            todo: [Obsolete("Call LoggerProviderBuilder.AddConsoleExporter instead this method will be removed in a future version.")]
        </member>
        <member name="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.LoggerProviderBuilder)">
            <summary>
            Adds Console exporter with LoggerProviderBuilder.
            </summary>
            <remarks><b>WARNING</b>: This is an experimental API which might change or be removed in the future. Use at your own risk.</remarks>
            <param name="loggerProviderBuilder"><see cref="T:OpenTelemetry.Logs.LoggerProviderBuilder"/>.</param>
            <returns>The supplied instance of <see cref="T:OpenTelemetry.Logs.LoggerProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.LoggerProviderBuilder,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds Console exporter with LoggerProviderBuilder.
            </summary>
            <remarks><inheritdoc cref="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.LoggerProviderBuilder)" path="/remarks"/></remarks>
            <param name="loggerProviderBuilder"><see cref="T:OpenTelemetry.Logs.LoggerProviderBuilder"/>.</param>
            <param name="configure">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The supplied instance of <see cref="T:OpenTelemetry.Logs.LoggerProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.LoggerProviderBuilder,System.String,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds Console exporter with LoggerProviderBuilder.
            </summary>
            <remarks><inheritdoc cref="M:OpenTelemetry.Logs.ConsoleExporterLoggingExtensions.AddConsoleExporter(OpenTelemetry.Logs.LoggerProviderBuilder)" path="/remarks"/></remarks>
            <param name="loggerProviderBuilder"><see cref="T:OpenTelemetry.Logs.LoggerProviderBuilder"/>.</param>
            <param name="name">Name which is used when retrieving options.</param>
            <param name="configure">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The supplied instance of <see cref="T:OpenTelemetry.Logs.LoggerProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="T:OpenTelemetry.Metrics.ConsoleExporterMetricsExtensions">
            <summary>
            Extension methods to simplify registering of the Console exporter.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Metrics.ConsoleExporterMetricsExtensions.AddConsoleExporter(OpenTelemetry.Metrics.MeterProviderBuilder)">
            <summary>
            Adds <see cref="T:OpenTelemetry.Exporter.ConsoleMetricExporter"/> to the <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> using default options.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> builder to use.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Metrics.ConsoleExporterMetricsExtensions.AddConsoleExporter(OpenTelemetry.Metrics.MeterProviderBuilder,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds <see cref="T:OpenTelemetry.Exporter.ConsoleMetricExporter"/> to the <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/>.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> builder to use.</param>
            <param name="configureExporter">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Metrics.ConsoleExporterMetricsExtensions.AddConsoleExporter(OpenTelemetry.Metrics.MeterProviderBuilder,System.String,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions})">
            <summary>
            Adds <see cref="T:OpenTelemetry.Exporter.ConsoleMetricExporter"/> to the <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/>.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> builder to use.</param>
            <param name="name">Name which is used when retrieving options.</param>
            <param name="configureExporter">Callback action for configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Metrics.ConsoleExporterMetricsExtensions.AddConsoleExporter(OpenTelemetry.Metrics.MeterProviderBuilder,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions,OpenTelemetry.Metrics.MetricReaderOptions})">
            <summary>
            Adds <see cref="T:OpenTelemetry.Exporter.ConsoleMetricExporter"/> to the <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/>.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> builder to use.</param>
            <param name="configureExporterAndMetricReader">Callback action for
            configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/> and <see
            cref="T:OpenTelemetry.Metrics.MetricReaderOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="M:OpenTelemetry.Metrics.ConsoleExporterMetricsExtensions.AddConsoleExporter(OpenTelemetry.Metrics.MeterProviderBuilder,System.String,System.Action{OpenTelemetry.Exporter.ConsoleExporterOptions,OpenTelemetry.Metrics.MetricReaderOptions})">
            <summary>
            Adds <see cref="T:OpenTelemetry.Exporter.ConsoleMetricExporter"/> to the <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/>.
            </summary>
            <param name="builder"><see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> builder to use.</param>
            <param name="name">Name which is used when retrieving options.</param>
            <param name="configureExporterAndMetricReader">Callback action for
            configuring <see cref="T:OpenTelemetry.Exporter.ConsoleExporterOptions"/> and <see
            cref="T:OpenTelemetry.Metrics.MetricReaderOptions"/>.</param>
            <returns>The instance of <see cref="T:OpenTelemetry.Metrics.MeterProviderBuilder"/> to chain the calls.</returns>
        </member>
        <member name="T:OpenTelemetry.Metrics.Base2ExponentialBucketHistogramHelper">
            <summary>
            Contains helper methods for the Base2ExponentialBucketHistogram class.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Metrics.Base2ExponentialBucketHistogramHelper.CalculateLowerBoundary(System.Int32,System.Int32)">
            <summary>
            Calculate the lower boundary for a Base2ExponentialBucketHistogram bucket.
            </summary>
            <param name="index">Index.</param>
            <param name="scale">Scale.</param>
            <returns>Calculated lower boundary.</returns>
        </member>
        <member name="T:OpenTelemetry.Internal.TagTransformerJsonHelper">
            <summary>
            This class has to be partial so that JSON source generator can provide code for the JsonSerializerContext.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Byte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Char">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Double">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Single">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Array">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Int64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Object">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.SByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Int16">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.UInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.UInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.UInt16">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenTelemetry.Internal.TagTransformerJsonHelper.ArrayTagJsonContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:OpenTelemetry.Internal.Guard">
            <summary>
            Methods for guarding against exception throwing values.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNull(System.Object,System.String)">
            <summary>
            Throw an exception if the value is null.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNullOrEmpty(System.String,System.String)">
            <summary>
            Throw an exception if the value is null or empty.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throw an exception if the value is null or whitespace.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfZero(System.Int32,System.String,System.String)">
            <summary>
            Throw an exception if the value is zero.
            </summary>
            <param name="value">The value to check.</param>
            <param name="message">The message to use in the thrown exception.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfInvalidTimeout(System.Int32,System.String)">
            <summary>
            Throw an exception if the value is not considered a valid timeout.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfOutOfRange(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Throw an exception if the value is not within the given range.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
            <param name="min">The inclusive lower bound.</param>
            <param name="max">The inclusive upper bound.</param>
            <param name="minName">The name of the lower bound.</param>
            <param name="maxName">The name of the upper bound.</param>
            <param name="message">An optional custom message to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfOutOfRange(System.Double,System.String,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>
            Throw an exception if the value is not within the given range.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
            <param name="min">The inclusive lower bound.</param>
            <param name="max">The inclusive upper bound.</param>
            <param name="minName">The name of the lower bound.</param>
            <param name="maxName">The name of the upper bound.</param>
            <param name="message">An optional custom message to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNotOfType``1(System.Object,System.String)">
            <summary>
            Throw an exception if the value is not of the expected type.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
            <typeparam name="T">The type attempted to convert to.</typeparam>
            <returns>The value casted to the specified type.</returns>
        </member>
        <member name="M:OpenTelemetry.Internal.ExceptionExtensions.ToInvariantString(System.Exception)">
            <summary>
            Returns a culture-independent string representation of the given <paramref name="exception"/> object,
            appropriate for diagnostics tracing.
            </summary>
            <param name="exception">Exception to convert to string.</param>
            <returns>Exception as string with no culture.</returns>
        </member>
    </members>
</doc>
